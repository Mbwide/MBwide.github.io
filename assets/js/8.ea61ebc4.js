(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{499:function(_,v,t){_.exports=t.p+"assets/img/TTLandRS232.0ab6780e.png"},500:function(_,v,t){_.exports=t.p+"assets/img/UART.9124a034.png"},501:function(_,v,t){_.exports=t.p+"assets/img/I2C1.85381d2c.png"},502:function(_,v,t){_.exports=t.p+"assets/img/I2Cdata.941a7140.png"},503:function(_,v,t){_.exports=t.p+"assets/img/I2C2.3e44bf9b.png"},504:function(_,v,t){_.exports=t.p+"assets/img/I2C3.3233d380.png"},505:function(_,v,t){_.exports=t.p+"assets/img/I2CACK.c91ce302.png"},506:function(_,v,t){_.exports=t.p+"assets/img/I2Cwrite.ad2f8a95.png"},507:function(_,v,t){_.exports=t.p+"assets/img/I2Cread.c0c9507c.png"},508:function(_,v,t){_.exports=t.p+"assets/img/SPI1.0621e561.png"},509:function(_,v,t){_.exports=t.p+"assets/img/SPI2.8493e7c9.png"},531:function(_,v,t){"use strict";t.r(v);var s=t(4),r=Object(s.a)({},(function(){var _=this,v=_.$createElement,s=_._self._c||v;return s("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[s("h1",{attrs:{id:"uart-i2c和spi详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uart-i2c和spi详解"}},[_._v("#")]),_._v(" UART，I2C和SPI详解")]),_._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[_._v("通信协议")])]),_._v(" "),s("th",[_._v("UART")]),_._v(" "),s("th",[s("strong",[_._v("IIC")])]),_._v(" "),s("th",[s("strong",[_._v("SPI")])])])]),_._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[_._v("信号线数目")])]),_._v(" "),s("td",[_._v("RX（接收）、TX（发送）、GND")]),_._v(" "),s("td",[_._v("SDA（数据线）、SCLK（时钟线）")]),_._v(" "),s("td",[_._v("SDO（MOSI、主输出）、SDI（MISO、主输入）、SCLK、CS")])]),_._v(" "),s("tr",[s("td",[s("strong",[_._v("设备从属关系")])]),_._v(" "),s("td",[_._v("无")]),_._v(" "),s("td",[_._v("存在，通过IIC发送地址信号选择从机")]),_._v(" "),s("td",[_._v("存在，可通过片选信号线CS（低电平有效）选择从机")])]),_._v(" "),s("tr",[s("td",[s("strong",[_._v("通信方式")])]),_._v(" "),s("td",[_._v("全双工、异步")]),_._v(" "),s("td",[_._v("半双工、同步")]),_._v(" "),s("td",[_._v("全双工、同步")])]),_._v(" "),s("tr",[s("td",[s("strong",[_._v("通信速率")])]),_._v(" "),s("td",[_._v("串行IR接口最高支持115.2Kbit/S")]),_._v(" "),s("td",[_._v("标准速度：100kbps；快速模式：400kbps；高速模式：3.4Mbps")]),_._v(" "),s("td",[_._v("传输速率可达几Mbps水平甚至上百兆")])])])]),_._v(" "),s("h2",{attrs:{id:"_1-uart"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-uart"}},[_._v("#")]),_._v(" 1 UART")]),_._v(" "),s("blockquote",[s("p",[s("strong",[_._v("UART：通用异步收发传输器（Universal Asynchronous Receiver/Transmitter）")])])]),_._v(" "),s("blockquote",[s("p",[s("strong",[_._v("USART:通用同步异步收发器（Universal Synchronous Asynchronous Receiver and Transmitter）")])])]),_._v(" "),s("h3",{attrs:{id:"_1-1-关键点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-关键点"}},[_._v("#")]),_._v(" 1.1 关键点")]),_._v(" "),s("ol",[s("li",[s("p",[s("strong",[_._v("它是用于控制计算机与串行设备的芯片。")])])]),_._v(" "),s("li",[s("p",[_._v("UART由波特率产生器、UART接收器、UART发送器组成。")])]),_._v(" "),s("li",[s("p",[_._v("由三条信号线组成：RX、TX、GND；其中RX和TX一般不加上拉电阻（加上可增强信号稳定性，也可默认下拉）。")])]),_._v(" "),s("li",[s("p",[_._v("UART包括RS232、RS499、RS423、RS422和RS485等接口标准规范和总线标准规范。它们的主要区别在于其各自的电平范围不相同。 嵌入式设备中常常使用到的是TTL、TTL转RS232的这种方式。")])]),_._v(" "),s("li",[s("p",[_._v("UART的功能计算机内部采用并行数据，不能直接把数据发到Modem，必须经过UART整理才能进行异步传输，其过程为：")]),_._v(" "),s("blockquote",[s("p",[_._v("CPU先把准备写入串行设备的数据放到UART的寄存器（临时内存块）中，再通过FIFO（First Input First Output，先入先出队列,一般接收用一个寄存器的8位，发送用一个寄存器的8位；有的是一个寄存器兼具发送和接收的功能，由相应标志位控制）传送到串行设备，若是没有FIFO，信息将变得杂乱无章，不可能传送到Modem。")])])])]),_._v(" "),s("h3",{attrs:{id:"_1-2-电平标准"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-电平标准"}},[_._v("#")]),_._v(" 1.2 电平标准")]),_._v(" "),s("p",[_._v("​\t电平标准（"),s("strong",[_._v("电气特性，不涉及接插件、电缆或协议")]),_._v("）")]),_._v(" "),s("ul",[s("li",[s("p",[_._v("TTL：理想状态使用5V(一般大于2.4V都可以)，表示二进制逻辑1，0V表示逻辑0。")])]),_._v(" "),s("li",[s("p",[_._v("RS232：RS-232使用-15V表示逻辑1，+15V表示逻辑0。传输速率一般不超过20Kbps")])]),_._v(" "),s("li",[s("p",[_._v("RS-485：差分信号，逻辑“1”以两线间的电压差为+（2—6）V表示；逻辑“0”以两线间的电压差为-（2—6）V表示。数据最高传输速率为10Mbps 。")]),_._v(" "),s("p",[s("img",{attrs:{src:t(499),alt:"image-20201206202833743"}})])])]),_._v(" "),s("h3",{attrs:{id:"_1-3-通讯协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-通讯协议"}},[_._v("#")]),_._v(" 1.3 通讯协议")]),_._v(" "),s("p",[s("img",{attrs:{src:t(500),alt:"image-20201206225228057"}})]),_._v(" "),s("ul",[s("li",[s("p",[s("strong",[_._v("空闲位：")]),_._v(" 数据线在空闲状态的时候为**逻辑“1”**状态，也就是高电平，表示没有数据线空闲，\n没有数据传输。")])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("起始位：")]),_._v(" 当要传输数据的时候先传输一个"),s("strong",[_._v("逻辑“0”")]),_._v("，也就是将数据线拉低，表示开始数据\n传输。")])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("数据位：")]),_._v(" 数据位就是实际要传输的数据，数据位数可选择 "),s("strong",[_._v("5~8 位")]),_._v("，我们一般都是按照字节\n传输数据的，一个字节 8 位，因此数据位"),s("strong",[_._v("通常是 8 位")]),_._v("的。"),s("strong",[_._v("（小端传输）低位在前，高位在后")]),_._v("。")])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("奇偶校验位：")]),_._v(" 这是对数据中“1”的位数进行奇偶校验用的，可以不使用奇偶校验功能。")])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("停止位：")]),_._v(" 数据传输完成标志位，停止位的位数可以选择1位、1.5位或2位高电平，一般都\n选择1位停止位。")])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("波特率：")]),_._v(" 波特率就是UART 数据传输的速率，也就是每秒传输的数据位数，一般选择 9600、\n19200、115200 等。计算公式如下：\n$$\nboud = \\frac{f}{16 * USARTDIV}\\tag{1}\n$$")]),_._v(" "),s("p",[_._v("其中boud为波特率的值，f为USART时钟频率，USARTDIV是USART分频器除法因子\n$$\nUSARTDIV = DIV_Mantissa + DIV_Fraction/16\\tag{2}\n$$\n例如stm32，挂载在APB2总线的USART1，其有72MHz的时钟频率，即f=72MHz，假设我们需要115200的波特率，则由上面的公式可得：\n$$\n115200 = \\frac{72000000}{16 * USARTDIV}\\tag{3}\n$$\n我们能得到USARTDIV=39.0625，那么\n$$\nDIV_Mantissa=39=0x17\\\nDIV_Fraction=0.625*16=1=0x01\\tag{4}\n$$\n这时我们应该设置USART_BRR的值为0x171。")])])]),_._v(" "),s("h2",{attrs:{id:"_2-i2c"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-i2c"}},[_._v("#")]),_._v(" 2 I2C")]),_._v(" "),s("blockquote",[s("p",[_._v("I2C：两线式串行总线，也叫内部集成电路（Inter-Integrated Circuit）")])]),_._v(" "),s("p",[s("img",{attrs:{src:t(501),alt:"image-20201207192357228"}})]),_._v(" "),s("h3",{attrs:{id:"_2-1-关键点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-关键点"}},[_._v("#")]),_._v(" 2.1 关键点")]),_._v(" "),s("ol",[s("li",[s("p",[_._v("串行、同步、半双工、低速率")]),_._v(" "),s("ul",[s("li",[_._v("串行：所有的数据"),s("strong",[_._v("以bit为单位")]),_._v("在SDA线上串行传输（但每次传输8bit）。")]),_._v(" "),s("li",[_._v("同步：即通信双方工作在同一个时钟。A方通过一根CLK信号线传输A的时钟给B，"),s("strong",[_._v("B工作在A传输的时钟下")]),_._v("。")])])]),_._v(" "),s("li",[s("p",[_._v("有两个接口，SCL和SDA。"),s("strong",[_._v("SDA和SCL都接上拉电阻（I2C的从设备本身是无法输出高电平,所以要接上拉），默认是空闲状态（高电平）")]),_._v("；")]),_._v(" "),s("ul",[s("li",[_._v("SCL：时钟线，传输CLK信号，一般是I2C"),s("strong",[_._v("主设备向从设备提供时钟的通道")]),_._v("。")]),_._v(" "),s("li",[_._v("SDA：数据线，通信数据（命令、地址、数据）都通过SDA线传输。")])])]),_._v(" "),s("li",[s("p",[_._v("主设备+从设备")]),_._v(" "),s("ul",[s("li",[_._v("分主设备和从设备。通信由主设备发起和主导，从设备只是按照"),s("strong",[_._v("I2C时序协议")]),_._v("被动的接受主设备的通信。")]),_._v(" "),s("li",[_._v("谁是主从设备，由通信双方来决定（I2C协议并无规定）。")])])]),_._v(" "),s("li",[s("p",[_._v("可以多个设备挂在一条总线上（从设备地址）")]),_._v(" "),s("ul",[s("li",[_._v("主设备负责调度总线，决定某一时间和哪个从设备通信。")]),_._v(" "),s("li",[_._v("同一时刻，只能有一个从设备和主设备通信，其他从设备处于“冬眠”状态。")]),_._v(" "),s("li",[_._v("每个I2C从设备在通信中都有一个"),s("strong",[_._v("I2C从设备地址，共7个bit，广播地址全0。")])]),_._v(" "),s("li",[_._v("它是从设备本身固有的属性。通信时主设备需要知道从设备的地址，然后在通信中通过地址来甄别是不是自己要找的那个从设备。这个地址是一个电路板上唯一的，不是全球唯一的。")]),_._v(" "),s("li",[_._v("系统中可能有多个同种芯片，为此"),s("strong",[_._v("addr分为固定部分和可编程部份")]),_._v("，细节视芯片而定，看datasheet。")]),_._v(" "),s("li",[_._v("理论上7位有128位地址，然而除去保留几个保留地址如广播地址0x00等，数量少于128个，且标准协议里预见了地址的局限性，扩充了10位地址的概念。")]),_._v(" "),s("li",[_._v("对于"),s("strong",[_._v("IIC可以挂多少个设备")]),_._v("的问题：对于同一个地址的设备来说，在不进行地址扩充（片选）的情况下只能挂一个，对于不同的设备来说，标准协议里面没有限制具体的个数的多少，这个由线路布线情况，软件情况以及工作模式确定。对于标准模式，只要总线上的负载电容不超过400pf，不超过芯片的负载能力既可以。")])])]),_._v(" "),s("li",[s("p",[_._v("SDA传输数据是"),s("strong",[_._v("大端传输（MSB），"),s("strong",[_._v("是")]),_._v("以字节为单位")]),_._v("的，每次传输的有效数据都是"),s("strong",[_._v("1个字节（8位）")]),_._v("。")])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("上拉电阻： 一方面是保护作用；另一方面增强驱动能力")])])])]),_._v(" "),s("ul",[s("li",[s("p",[_._v("I2C接口工作时只检测高、低电平，要是直接接电源的来实现高的话，一旦其他器件拉低时非常危险（"),s("strong",[_._v("保护")]),_._v("）")])]),_._v(" "),s("li",[s("p",[_._v("I2C总线是一种特殊的总线，因为多器件需共用总线，加上数据线需支持双向通信。SDA要求开漏输出模式。由于开漏无法直接输出“高（"),s("strong",[_._v("增强驱动能力")]),_._v("）”时，需外加上拉电阻配合。")])])]),_._v(" "),s("h3",{attrs:{id:"_2-2-通讯协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-通讯协议"}},[_._v("#")]),_._v(" 2.2 通讯协议")]),_._v(" "),s("p",[_._v("​\t"),s("strong",[_._v("完整的一帧I2C数据")])]),_._v(" "),s("p",[s("img",{attrs:{src:t(502),alt:"img"}})]),_._v(" "),s("ol",[s("li",[s("p",[s("strong",[_._v("数据有效性")])]),_._v(" "),s("p",[_._v("​\t  SDA线上数据必须在时钟的高电平周期保持稳定，数据线的高或低电平状态只有在 "),s("strong",[_._v("SCL线的时钟信号是低电平时才能改变")]),_._v("。")]),_._v(" "),s("p",[s("img",{attrs:{src:t(503),alt:"image-20201207202037543"}})])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("起始信号和停止信号")])]),_._v(" "),s("ul",[s("li",[s("p",[_._v("起始信号S：当SCL高电平时，SDA由高电平向低电平转换，是一种跳变信号，不是一个电平信号；")])]),_._v(" "),s("li",[s("p",[_._v("停止信号P：当SCL高电平时，SDA由低电平向高电平转换，是一种跳变信号，不是一个电平信号。")]),_._v(" "),s("p",[s("img",{attrs:{src:t(504),alt:"image-20201207203002972"}})])])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("响应ACK")])]),_._v(" "),s("p",[_._v("数据接收方收到传输的一个字节数据后，需要给出响应，此时处在第九个时钟，发送端释放SDA线控制权，将SDA电平拉高，由接收方控制。")]),_._v(" "),s("ul",[s("li",[_._v("应答（ACK）：SDA为低电平")]),_._v(" "),s("li",[_._v("非应答（ACK）：SDA为高电平")])]),_._v(" "),s("p",[s("img",{attrs:{src:t(505),alt:"image-20201207203647736"}})])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("写时序")])]),_._v(" "),s("p",[s("img",{attrs:{src:t(506),alt:"image-20201207204943104"}})]),_._v(" "),s("ol",[s("li",[s("strong",[_._v("开始")]),_._v("信号。")]),_._v(" "),s("li",[_._v("发送I2C设备地址，每个I2C器件都有一个"),s("strong",[_._v("设备地址")]),_._v("，通过发送具体的设备地址来决定访问哪个I2C器件。这是一个8位的数据，其中"),s("strong",[_._v("高7位是设备地址，最后1位是读写位")]),_._v("，为1的话表示这是一个读操作，为0的话表示这是一个写操作。")]),_._v(" "),s("li",[_._v("I2C器件地址后面跟着一个读写位，0表示写，1表示读，发送"),s("strong",[_._v("写信号")]),_._v("。")]),_._v(" "),s("li",[s("strong",[_._v("从机")]),_._v("发送的ACK"),s("strong",[_._v("应答")]),_._v("信号。")]),_._v(" "),s("li",[_._v("重新发送"),s("strong",[_._v("开始")]),_._v("信号。")]),_._v(" "),s("li",[_._v("发送要写入数据的"),s("strong",[_._v("寄存器地址")]),_._v("。")]),_._v(" "),s("li",[s("strong",[_._v("从机")]),_._v("发送的ACK"),s("strong",[_._v("应答")]),_._v("信号。")]),_._v(" "),s("li",[_._v("发送要"),s("strong",[_._v("写")]),_._v("入寄存器的"),s("strong",[_._v("数据")]),_._v("。")]),_._v(" "),s("li",[s("strong",[_._v("从机")]),_._v("发送的ACK"),s("strong",[_._v("应答")]),_._v("信号。")]),_._v(" "),s("li",[s("strong",[_._v("停止")]),_._v("信号。")])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("读时序")])]),_._v(" "),s("p",[s("img",{attrs:{src:t(507),alt:"image-20201207210138900"}})]),_._v(" "),s("ol",[s("li",[s("strong",[_._v("开始")]),_._v("信号。")]),_._v(" "),s("li",[_._v("主机发送要读取的 I2C "),s("strong",[_._v("从设备地址")]),_._v("。")]),_._v(" "),s("li",[_._v("读写控制位，因为是向 I2C 从设备发送数据，因此是"),s("strong",[_._v("写信号")]),_._v("。")]),_._v(" "),s("li",[_._v("从机发送的ACK "),s("strong",[_._v("应答")]),_._v("信号。")]),_._v(" "),s("li",[_._v("重新发送"),s("strong",[_._v("开始")]),_._v("信号。")]),_._v(" "),s("li",[_._v("主机发送要读取的"),s("strong",[_._v("寄存器地址")]),_._v("。")]),_._v(" "),s("li",[s("strong",[_._v("从机")]),_._v("发送的ACK"),s("strong",[_._v("应答")]),_._v("信号。")]),_._v(" "),s("li",[_._v("重新发送"),s("strong",[_._v("开始")]),_._v("信号。")]),_._v(" "),s("li",[_._v("重新发送要读取的 I2C"),s("strong",[_._v("从设备地址")]),_._v("。")]),_._v(" "),s("li",[_._v("读写控制位，这里是"),s("strong",[_._v("读信号")]),_._v("，表示接下来是从 I2C 从设备里面读取数据。")]),_._v(" "),s("li",[_._v("从机发送的ACK"),s("strong",[_._v("应答")]),_._v("信号。")]),_._v(" "),s("li",[_._v("从I2C器件里面"),s("strong",[_._v("读")]),_._v("取到的"),s("strong",[_._v("数据")]),_._v("。")]),_._v(" "),s("li",[_._v("主机发出"),s("strong",[_._v("非应答")]),_._v("（NO ACK）信号，表示读取完成，不需要从机再发送ACK信号了。")]),_._v(" "),s("li",[_._v("主机发出"),s("strong",[_._v("停止")]),_._v("信号，停止I2C通信。")])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("I2C多字节读写时序")])]),_._v(" "),s("p",[_._v("有时候我们需要读写多个字节，多字节读写时序和单字节的基本一致，只是在读写数据的\n时候可以连续发送多个自己的数据，其他的控制时序都是和单字节一样的。")])])]),_._v(" "),s("h3",{attrs:{id:"_2-3-其他要点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-其他要点"}},[_._v("#")]),_._v(" 2.3 其他要点")]),_._v(" "),s("ol",[s("li",[s("p",[_._v("I2C地址分7位和10位。")])]),_._v(" "),s("li",[s("p",[_._v("最直接的，牵涉到两方面的问题，首先是功耗的问题，其次是速度的问题，二者是矛盾的！如果你想尽量提高速度，那么就牵涉到总线电容的问题，其实很容易理解，上拉电阻与总线的电容形成了RC，高速时将直接影响通讯！因为总线拉高时有个充电时间以及高电平的阀值，如果还没有充电到足以保证从器件可以识别的高电平的阀值时主器件就以为完成了一个总线动作的话，那么通讯肯定是不能进行的！")]),_._v(" "),s("p",[_._v("如果你想尽可能降低功耗，那么就要尽可能增大电阻以最大可能的减小电路各部分的消耗电流从而实现整体降低功耗！但不可能无限大")])])]),_._v(" "),s("h2",{attrs:{id:"_3-spi"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-spi"}},[_._v("#")]),_._v(" 3 SPI")]),_._v(" "),s("blockquote",[s("p",[_._v("SPI：串行外设接口（Serial Peripheral Interface），是一种高速的，全双工，同步的通信总线。")])]),_._v(" "),s("p",[s("img",{attrs:{src:t(508),alt:"image-20201207221233948"}})]),_._v(" "),s("h3",{attrs:{id:"_3-1-关键点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-关键点"}},[_._v("#")]),_._v(" 3.1 关键点")]),_._v(" "),s("ol",[s("li",[_._v("串行、同步、全双工、高速率\n"),s("ul",[s("li",[_._v("串行：协议支持字长"),s("strong",[_._v("不限于8bits")]),_._v("，可根据应用特点灵活选择消息字长")]),_._v(" "),s("li",[_._v("同步：即通信双方工作在同一个时钟。")])])]),_._v(" "),s("li",[_._v("最少需要4个接口，CS、SCLK、MOSI（SDO）和MISO（SDI）\n"),s("ul",[s("li",[_._v("CS/SS：Slave Select/Chip Select，这个是片选信号线，"),s("strong",[_._v("低电平有效")]),_._v("。")]),_._v(" "),s("li",[_._v("SCK：Serial Clock，串行时钟，该信号由主机产生，其支持的"),s("strong",[_._v("最高通讯速率为fpclk/2")]),_._v("，即所挂载总线速率的一半。")]),_._v(" "),s("li",[_._v("MOSI/SDO：Master Out Slave In/Serial Data Output，简称主出从入信号线，这根数据线\n只能用于主机向从机发送数据，也就是主机输出，从机输入。")]),_._v(" "),s("li",[_._v("MISO/SDI：Master In Slave Out/Serial Data Input，简称主入从出信号线，这根数据线只\n能用户从机向主机发送数据，也就是主机输入，从机输出。")])])]),_._v(" "),s("li",[_._v("没有指定的流控制，没有应答机制确认是否接收到数据，所以跟IIC总线协议比较在数据\n可靠性上有一定的缺陷。")]),_._v(" "),s("li",[_._v("没有寻址机制，只能靠片选选择不同设备；")])]),_._v(" "),s("h3",{attrs:{id:"_3-2-通讯协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-通讯协议"}},[_._v("#")]),_._v(" 3.2 通讯协议")]),_._v(" "),s("ol",[s("li",[s("p",[s("strong",[_._v("起始，停止信号")])]),_._v(" "),s("ul",[s("li",[s("p",[_._v("CS/SS电平由高变低，则产生起始信号；")])]),_._v(" "),s("li",[s("p",[_._v("CS/SS电平由低变高，则产生停止信号。")])])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("数据有效性")])]),_._v(" "),s("ul",[s("li",[_._v("MOSI和MISO线在SCK的每个时钟周期传输一位数据，开发者可以"),s("strong",[_._v("自行设置MSB或LSB先行")]),_._v("，不过需要保证两个通讯设备都使用同样的协定。")]),_._v(" "),s("li",[_._v("SPI 有四种工作模式，通过串行时钟极性(CPOL)和相位(CPHA)的搭配来得到四种工作模式")])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("四种工作模式")])]),_._v(" "),s("p",[_._v("SPI 有四种工作模式，通过串行时钟极性(CPOL)和相位(CPHA)的搭配来得到四种工作模式：")])])]),_._v(" "),s("ul",[s("li",[s("p",[_._v("**CPOL：**即在没有数据传输时，时钟的空闲状态的电平。")]),_._v(" "),s("ul",[s("li",[_._v("**CPHA：**即数据的采样时刻。")])]),_._v(" "),s("p",[s("img",{attrs:{src:t(509),alt:"image-20201207223945909"}})]),_._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[_._v("SPI模式")]),_._v(" "),s("th",[_._v("CPOL")]),_._v(" "),s("th",[_._v("CPHA")]),_._v(" "),s("th",[_._v("空闲时SCK时钟")]),_._v(" "),s("th",[_._v("采样时间")])])]),_._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[_._v("0")]),_._v(" "),s("td",[_._v("1")]),_._v(" "),s("td",[_._v("1")]),_._v(" "),s("td",[_._v("高电平")]),_._v(" "),s("td",[_._v("第二个边沿（偶）")])]),_._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[_._v("1")]),_._v(" "),s("td",[_._v("1")]),_._v(" "),s("td",[_._v("0")]),_._v(" "),s("td",[_._v("高电平")]),_._v(" "),s("td",[_._v("第一个边沿（奇）")])]),_._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[_._v("2")]),_._v(" "),s("td",[_._v("0")]),_._v(" "),s("td",[_._v("1")]),_._v(" "),s("td",[_._v("低电平")]),_._v(" "),s("td",[_._v("第二个边沿（偶）")])]),_._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[_._v("3")]),_._v(" "),s("td",[_._v("0")]),_._v(" "),s("td",[_._v("0")]),_._v(" "),s("td",[_._v("低电平")]),_._v(" "),s("td",[_._v("第一个边沿（奇）")])])])])])])])}),[],!1,null,null,null);v.default=r.exports}}]);